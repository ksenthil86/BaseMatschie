<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="4" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="28703" started-at="2022-09-04T06:47:56Z" finished-at="2022-09-04T06:48:25Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.RunTest@dcfda20]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Surefire test" duration-ms="28703" started-at="2022-09-04T06:47:56Z" finished-at="2022-09-04T06:48:25Z">
      <class name="chain.GetIncidentTests">
        <test-method status="PASS" signature="sendGetRequest()[pri:0, instance:chain.GetIncidentTests@1fdfafd2]" name="sendGetRequest" duration-ms="4812" started-at="2022-09-04T06:48:20Z" depends-on-methods="chain.CreateIncidentTests.sendPostRequest" finished-at="2022-09-04T06:48:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendGetRequest -->
        <test-method status="PASS" signature="after()[pri:0, instance:chain.GetIncidentTests@1fdfafd2]" name="after" is-config="true" duration-ms="15" started-at="2022-09-04T06:48:24Z" finished-at="2022-09-04T06:48:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- chain.GetIncidentTests -->
      <class name="runner.RunTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.RunTest@dcfda20]" name="setUpClass" is-config="true" duration-ms="184" started-at="2022-09-04T06:48:07Z" finished-at="2022-09-04T06:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.RunTest@dcfda20]" name="runScenario" duration-ms="4445" started-at="2022-09-04T06:48:07Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-09-04T06:48:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["TC001 Create a Incident without any body in the HTTP request"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Incident Management in the Service now application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.RunTest@dcfda20]" name="runScenario" duration-ms="4403" started-at="2022-09-04T06:48:11Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-09-04T06:48:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["TC002 Create a Incident with body as file in the HTTP request"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Incident Management in the Service now application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.RunTest@dcfda20]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2022-09-04T06:48:16Z" finished-at="2022-09-04T06:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.RunTest -->
      <class name="chain.CreateIncidentTests">
        <test-method status="PASS" signature="before()[pri:0, instance:chain.CreateIncidentTests@58ebfd03]" name="before" is-config="true" duration-ms="728" started-at="2022-09-04T06:47:55Z" finished-at="2022-09-04T06:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="sendPostRequest()[pri:0, instance:chain.CreateIncidentTests@58ebfd03]" name="sendPostRequest" duration-ms="6349" started-at="2022-09-04T06:47:56Z" finished-at="2022-09-04T06:48:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendPostRequest -->
        <test-method status="PASS" signature="after()[pri:0, instance:chain.CreateIncidentTests@58ebfd03]" name="after" is-config="true" duration-ms="63" started-at="2022-09-04T06:48:02Z" finished-at="2022-09-04T06:48:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- chain.CreateIncidentTests -->
      <class name="chain.UpdateIncidentTests">
        <test-method status="PASS" signature="sendUpdateRequest()[pri:0, instance:chain.UpdateIncidentTests@a4b2d8f]" name="sendUpdateRequest" duration-ms="4376" started-at="2022-09-04T06:48:02Z" depends-on-methods="chain.CreateIncidentTests.sendPostRequest" finished-at="2022-09-04T06:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendUpdateRequest -->
        <test-method status="PASS" signature="after()[pri:0, instance:chain.UpdateIncidentTests@a4b2d8f]" name="after" is-config="true" duration-ms="0" started-at="2022-09-04T06:48:07Z" finished-at="2022-09-04T06:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- chain.UpdateIncidentTests -->
      <class name="chain.DeleteIncidentTests">
        <test-method status="PASS" signature="sendDeleteRequest()[pri:0, instance:chain.DeleteIncidentTests@5b07730f]" name="sendDeleteRequest" duration-ms="3947" started-at="2022-09-04T06:48:16Z" depends-on-methods="chain.UpdateIncidentTests.sendUpdateRequest" finished-at="2022-09-04T06:48:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendDeleteRequest -->
        <test-method status="PASS" signature="after()[pri:0, instance:chain.DeleteIncidentTests@5b07730f]" name="after" is-config="true" duration-ms="0" started-at="2022-09-04T06:48:20Z" finished-at="2022-09-04T06:48:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- chain.DeleteIncidentTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
